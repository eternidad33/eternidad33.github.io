[{"content":"[toc]\n简易的图书管理系统 项目简介 推荐视频：JAVA+MySql 图书管理系统，技术:Swing+jdbc+mysql\n用到的知识：Java，MySQL\n源码已上传至码云\n项目整体架构 源码目录如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  PS E:\\IdeaProjects\\BookManager\\src\u0026gt; tree /f\r卷 软件 的文件夹 PATH 列表\r卷序列号为 54DD-69A2\rE:.\r├─dao\r│ BookDao.java\r│ BookTypeDao.java\r│ UserDao.java\r│\r├─entity\r│ Book.java\r│ Booktype.java\r│ User.java\r│\r├─images\r│ book.png\r│ susu.jpg\r│\r├─META-INF\r│ MANIFEST.MF\r│\r├─util\r│ DbUtil.java\r│ StringUtil.java\r│\r└─view\rAbout.java\rAbout.jfd\rBookAddFrm.java\rBookAddFrm.jfd\rBookTypeAddFrm.java\rBookTypeAddFrm.jfd\rBookTypeManagerFrm.java\rBookTypeManagerFrm.jfd\rLogin.form\rLogin.java\rMainFrm.java\rMainFrm.jfd\r  由此可见，本项目也是采用的 MVC 架构，dao包用于操作数据库，entity包包含本项目的实体类，images包是本项目用到的图片，META-INF包是生成 Jar 包时产生的文件夹，util包包含本项目用到的工具类，view包是本项目的视图层，用于设计窗口显示。\n项目中各类的依赖关系如下图\n具体实现 util包 本项目的工具包，包含两个工具类\nDbUtil.java主要是设计了数据库的驱动，地址，用户名及密码，和控制数据库的连接与断开\nStringUtil.java只是用于判断字符串是否为空，只有空格也算为空\nentity包 此包包含了数据库表的实体对象，可以自己写，也可以通过 idea 的EasyCode插件进行代码生成，但是后边要用到的必要的构造方法要自己写。\n大多数情况下都是简单类包含 Getter 和 Setter 方法，如下是EasyCode插件生成的代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53  public class Booktype implements Serializable {\rprivate static final long serialVersionUID = -43707012852599825L;\rprivate Integer id;\rprivate String booktypename;\r@Override\rpublic String toString() {\rreturn this.booktypename;\r}\rprivate String booktypedesc;\rpublic Booktype(String booktypename, String booktypedesc) {\rthis.booktypename = booktypename;\rthis.booktypedesc = booktypedesc;\r}\rpublic Booktype() {\rsuper();\r}\rpublic Booktype(Integer id, String booktypename, String booktypedesc) {\rthis(booktypename, booktypedesc);\rthis.id = id;\r}\rpublic Integer getId() {\rreturn id;\r}\rpublic void setId(Integer id) {\rthis.id = id;\r}\rpublic String getBooktypename() {\rreturn booktypename;\r}\rpublic void setBooktypename(String booktypename) {\rthis.booktypename = booktypename;\r}\rpublic String getBooktypedesc() {\rreturn booktypedesc;\r}\rpublic void setBooktypedesc(String booktypedesc) {\rthis.booktypedesc = booktypedesc;\r}\r}\r  dao包 进行数据库的访问\n类中的方法定义形式基本为public 返回类型 方法名(Connection conn, 实体类 对象名) throws SQLException\n例如用户登录的方法如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  public User login(Connection connection, User user) throws SQLException {\rUser resultUser = null;\rString sql = \u0026#34;select * from table_user where userName=? and password=?\u0026#34;;\rPreparedStatement psmt = connection.prepareStatement(sql);\rpsmt.setString(1, user.getUserName());\rpsmt.setString(2, user.getPassword());\rResultSet resultSet = psmt.executeQuery();\rif (resultSet.next()) {\rresultUser = new User();\rresultUser.setId(resultSet.getInt(\u0026#34;id\u0026#34;));\rresultUser.setUserName(resultSet.getString(\u0026#34;userName\u0026#34;));\rresultUser.setPassword(resultSet.getString(\u0026#34;password\u0026#34;));\r}\rreturn resultUser;\r}\r  步骤总结：\n  其中 SQL 语句中的要查找的值要用?代替，方便后面设置\nString sql = \u0026quot;select * from table_user where userName=? and password=?\u0026quot;;\n  然后创建 SQL 语句的游标对象\npsmt，PreparedStatement psmt = connection.prepareStatement(sql);\n  设置 SQL 语句中的变量值，第几个?为几，索引就是几，没有 0\npsmt.setString(1, user.getUserName());\n  执行查询语句，并返回ResultSet对象用于保存查询结果\nResultSet resultSet = psmt.executeQuery();\n  然后根据需求进行其他操作\n  BookDao类的设计如下，dao包下的其他类类似\n添加图书\n1 2 3 4 5 6 7 8 9 10 11  public static int add(Connection connection, Book book) throws SQLException {\rString sql = \u0026#34;insert into book values(null,?,?,?,?,?,?)\u0026#34;;\rPreparedStatement psmt = connection.prepareStatement(sql);\rpsmt.setString(1, book.getBookname());\rpsmt.setString(2, book.getAuthor());\rpsmt.setString(3, book.getSex());\rpsmt.setInt(4, book.getBooktypeid());\rpsmt.setString(5, book.getBookdesc());\rpsmt.setFloat(6, book.getPrice());\rreturn psmt.executeUpdate();\r}\r  添加成功返回 1，添加失败返回 0\n删除图书\n1 2 3 4 5 6  public static int delete(Connection conn, String id) throws SQLException {\rString sql = \u0026#34;delete from book where id=?\u0026#34;;\rPreparedStatement psmt = conn.prepareStatement(sql);\rpsmt.setString(1, id);\rreturn psmt.executeUpdate();\r}\r  删除成功返回 1，删除失败返回 0\n修改图书\n1 2 3 4 5 6 7 8 9 10 11 12  public static int update(Connection conn, Book book) throws SQLException {\rString sql = \u0026#34;update book set bookName=?,author=?,sex=?,price=?,bookTypeid=?,bookDesc=? where id=?\u0026#34;;\rPreparedStatement psmt = conn.prepareStatement(sql);\rpsmt.setString(1, book.getBookname());\rpsmt.setString(2, book.getAuthor());\rpsmt.setString(3, book.getSex());\rpsmt.setFloat(4, book.getPrice());\rpsmt.setInt(5, book.getBooktypeid());\rpsmt.setString(6, book.getBookdesc());\rpsmt.setInt(7, book.getId());\rreturn psmt.executeUpdate();\r}\r  修改成功返回 1，修改失败返回 0\n查询图书\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  public static ResultSet list(Connection conn, Book book) throws SQLException {\rStringBuffer sb = new StringBuffer(\u0026#34;select * from book b,table_booktype bt where b.bookTypeId=bt.id\u0026#34;);\rif (!StringUtil.isEmpty(book.getBookname())) {\rsb.append(\u0026#34; and b.bookName like \u0026#39;%\u0026#34; + book.getBookname() + \u0026#34;%\u0026#39;\u0026#34;);\r}\rif (!StringUtil.isEmpty(book.getAuthor())) {\rsb.append(\u0026#34; and b.author like \u0026#39;%\u0026#34; + book.getAuthor() + \u0026#34;%\u0026#39;\u0026#34;);\r}\rif (book.getBooktypeid() != null \u0026amp;\u0026amp; book.getBooktypeid() != -1) {\rsb.append(\u0026#34; and b.bookTypeId=\u0026#34; + book.getBooktypeid());\r}\rPreparedStatement psmt = conn.prepareStatement(sb.toString());\rreturn psmt.executeQuery();\r}\r  返回查询结果\nview包 视图层是利用的 swing 组件设计，但这个不是本项目的重点，因为 Java 的 swing 已经很少有人用了，可以直接使用 idea 中的JFormDesigner插件进行拖拉控件，使用时一定要注意将框架的布局类型设为null Layout，大小设为Design size\n我们只需设计按钮和表格的触发事件\n例如图书添加事件\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54  private void button1ActionPerformed(ActionEvent e) {\rString bookName = this.booknameTXT.getText();\rString author = this.bookAuthorTXT.getText();\rString price = this.bookPriceTXT.getText();\rString bookDesc = this.bookDescTXT.getText();\rif (StringUtil.isEmpty(bookName)) {\rJOptionPane.showMessageDialog(null, \u0026#34;图书名称不能为空\u0026#34;);\rreturn;\r}\rif (StringUtil.isEmpty(author)) {\rJOptionPane.showMessageDialog(null, \u0026#34;图书作者不能为空\u0026#34;);\rreturn;\r}\rif (StringUtil.isEmpty(price)) {\rJOptionPane.showMessageDialog(null, \u0026#34;图书价格不能为空\u0026#34;);\rreturn;\r}\rtry {\rfloat pricef = Float.parseFloat(price);\r} catch (NumberFormatException numberFormatException) {\rJOptionPane.showMessageDialog(null, \u0026#34;图书价格应为数字\u0026#34;);\rreturn;\r}\rString sex = \u0026#34;\u0026#34;;\rif (this.man.isSelected()) {\rsex = \u0026#34;男\u0026#34;;\r} else {\rsex = \u0026#34;女\u0026#34;;\r}\rBooktype booktype = (Booktype) this.booktypecb.getSelectedItem();\rassert booktype != null;\rint booktypeId = booktype.getId();\rBook book = new Book(bookName, author, sex, Float.parseFloat(price), booktypeId, bookDesc);\rConnection conn = null;\rtry {\rconn = dbUtil.getConnection();\rint addNum = BookDao.add(conn, book);\rif (addNum == 1) {\rJOptionPane.showMessageDialog(null, \u0026#34;添加成功\u0026#34;);\rresetValue();\r} else {\rJOptionPane.showMessageDialog(null, \u0026#34;添加失败\u0026#34;);\r}\r} catch (Exception ex) {\rex.printStackTrace();\rJOptionPane.showMessageDialog(null, \u0026#34;添加失败\u0026#34;);\r} finally {\rtry {\rconn.close();\r} catch (SQLException ex) {\rex.printStackTrace();\r}\r}\r}\r  设计思想：\n 判断必需的输入框是否为空，以及类型是否一致 获取各输入框的数据 根据数据实例化对象 调用dao包中对应的方法进行操作  其他的删除，修改，查询的操作思想基本和添加的方法一样\n项目总结 项目中使用到了 Java 的 swing 技术，但是现在已经很少有人会用 Java 去写软件界面了，Java 不能像 C#那样拖拉控件设计界面，但是可以在 idea 中安装JFormDesigner插件实现 C#那样的效果了。\n MVC 全名是 Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。MVC 被独特的发展起来用于映射传统的输入、处理和输出功能在一个逻辑的图形化用户界面的结构中。\n MVC 即围绕着数据库进行操作，本项目只是简单地实现了对数据库的增删改查，比较适合新手练习。\n","description":"推荐视频：JAVA+MySql 图书管理系统，技术:Swing+jdbc+mysql用到的知识：Java，MySQL工具：IDEA源码已上传至码云点击查看预览效果","id":0,"section":"posts","tags":["java","mysql"],"title":"简易的图书管理系统(Java+MySQL8.0)","uri":"https://eternidad33.github.io/zh/posts/%E7%AE%80%E6%98%93%E7%9A%84%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9Fjava+mysql8.0/"},{"content":"Math  最近受到疫情影响，学校不能开学，而且在家学习效率也不高，所以这几天就开始试着写博客，然后写博客就需要用到 Markdown。之后我就整理了两篇文章，前一篇文章是入门的，另一篇就是这一篇，也可以叫做 Markdown 进阶篇。\n 这篇文章主要介绍 Markdown 中常用的数学符号,更多 Markdown 实用格式内容可以访问我的上一篇文章小白必看，用 Markdown 代码写出好看的页面，也可以去参考Markdown 官方文档\n不同的 Markdown 编辑器对 Math 的支持是不一样的，一些编辑器或者个人博客上的 md 文件中的数学公式可能会出现乱码的情况，推荐用 Typora 作为 Markdown 编辑器，这款编辑器可以进行实时渲染，而且支持数学公式。\n基本的数学公式 数学公式用$$或$包括起来\n$表示公式在行内显示,$$表示公式独占一行，并居中显示\nMarkdown 代码：\n1 2 3  $$E=mc^2$$\r行内的公式$E=mc^2$行内的公式，行内的$E=mc^2$公式。\r$x \u0026gt; y$\r  显示结果：\n$$E=mc^2$$\n 行内的公式$E=mc^2$行内的公式，行内的$E=mc^2$公式。\n$x \u0026gt; y$\n 开方符号$\\sqrt{x}$，显示结果$\\sqrt{x}$\n开 n 次方符号$\\sqrt[n]{x}$，写法为$\\sqrt[n]{x}$\n随机变量$\\mathtt{X}_n$的写法为$\\mathtt{X}_n$\n分数$\\frac{1}{n}$:$\\frac{1}{n}$\n期望$\\mathbb{E}$： $\\mathbb{E}$\n均值$\\bar x$：$\\bar x$或 $\\overline x$\n$ \\overbrace{a+b+c}^{3.0}$:$\\overbrace{a+b+c}^{3.0}$\n$\\overbrace{a+\\underbrace{b+c}_{2.0}}^{3.0}$ ：$\\overbrace{a+\\underbrace{b+c}_{2.0}}^{3.0}$\n${n\\choose m}$ :${n\\choose m}$\n$C_n^m$:$C_n^m$\n分支公式\n$f(x)=\\begin{cases} 1, \u0026amp; x\u0026gt;0\\ 0, \u0026amp; x=0\\\n-1, \u0026amp; x\u0026lt;0\n\\end{cases}$\n代码为：\n1 2 3 4 5  $f(x)=\\begin{cases} 1, \u0026amp; x\u0026gt;0\\\\ 0, \u0026amp; x=0\\\\\r-1, \u0026amp; x\u0026lt;0\r\\end{cases}$\r  三角函数 Markdown 代码：\n1 2 3  $f(x)=\\sin(x)$\r$f(x)=\\cos(x)$\r$f(x)=\\tan(x)$\r  显示结果为：\n $f(x)=\\sin(x)$ \u0026gt; $f(x)=\\cos(x)$ \u0026gt; $f(x)=\\tan(x)$\n 运算符 求和符号$\\sum_{i=0}^{n}$：$\\sum_{i=0}^{n}$\n累乘符号$\\prod$：$\\prod$\n极限符号 $\\lim_{x\\to +\\infty}$：$\\lim_{x\\to +\\infty}$\n收敛$x_n\\stackrel{p}\\longrightarrow0$:$x_n\\stackrel{p}\\longrightarrow0$\n向量$\\vec{a}$：$\\vec{a}$或 $\\overrightarrow{a} $\n$\\hat y=a\\hat x+b$：$\\hat y=a\\hat x+b$\n转置符号$\\mathtt{X}\u0026lsquo;$ ：$\\mathtt{X}'$\n异或$\\bigoplus$ :$\\bigoplus$\n   符号 代码     $\\equiv$ $\\equiv$   $\\leq$ $\\leq$   $\\geq$ $\\geq$   $\\neq$ $\\neq$ 或 $\\not=$   $\\not\u0026gt;$ $\\not\u0026gt;$   $\\not\u0026lt;$ $\\not\u0026lt;$   $\\approx$ $\\approx$   $\\cdot$ $\\cdot$   $\\cdots$ $\\cdots$   $\\mid$ $\\mid$    集合    符号 代码     $\\in$ $\\in$   $\\notin$ $\\notin$   $\\varnothing$ $\\varnothing$   $\\subset$ $\\subset$   $\\not\\subset$ $\\not\\subset$   $\\subseteq$ $\\subseteq$   $\\not\\subseteq$ $\\not\\subseteq$   $\\cup$ $\\cup$   $\\cap$ $\\cap$   $\\vee$ $\\vee$   $\\wedge$ $\\wedge$   $\\neg$ $\\neg$    高数必备    符号 代码     $\\int$ $\\int$   $\\iint$ $\\iint$   $\\oint$ $\\oint$   $\\infty$ $\\infty$   $\\nabla$ $\\nabla$   $\\because$ $\\because$   $\\therefore$ $\\therefore$   $\\forall$ $\\forall$   $\\exists$ $\\exists$    希腊字母    小写符号 代码 大写符号 代码     $\\alpha$ $\\alpha$ $\\Alpha$ $\\Alpha$   $\\beta$ $\\beta$ $\\Beta$ $\\Beta$   $\\gamma$ $\\gamma$ $\\Gamma$ $\\Gamma$   $\\delta$ $\\delta$ $\\Delta$ $\\Delta$   $\\epsilon$ $\\epsilon$ $\\Epsilon$ $\\Epsilon$   $\\zeta$ $\\zeta$ $\\Zeta$ $\\Zeta$   $\\eta$ $\\eta$ $\\Eta$ $\\Eta$   $\\theta$ $\\theta$ $\\Theta$ $\\Theta$   $\\iota$ $\\iota$ $\\Iota$ $\\Iota$   $\\kappa$ $\\kappa$ $\\Kappa$ $\\Kappa$   $\\lambda$ $\\lambda$ $\\Lambda$ $\\Lambda$   $\\mu$ $\\mu$ $\\Mu$ $\\Mu$   $\\nu$ $\\nu$ $\\Nu$ $\\Nu$   $\\xi$ $\\xi$ $\\Xi$ $\\Xi$   $\\omicron$ $\\omicron$ $\\Omicron$ $\\Omicron$   $\\pi$ $\\pi$ $\\Pi$ $\\Pi$   $\\rho$ $\\rho$ $\\Rho$ $\\Rho$   $\\sigma$ $\\sigma$ $\\Sigma$ $\\Sigma$   $\\tau$ $\\tau$ $\\Tau$ $\\Tau$   $\\upsilon$ $\\upsilon$ $\\Upsilon$ $\\Upsilon$   $\\phi$ $\\phi$ $\\Phi$ $\\Phi$   $\\chi$ $\\chi$ $\\Chi$ $\\Chi$   $\\psi$ $\\psi$ $\\Psi$ $\\Psi$   $\\omega$ $\\omega$ $\\Omega$ $\\Omega$    箭头    符号 代码 符号 代码     $\\uparrow$ $\\uparrow$ $\\Uparrow$ $\\Uparrow$   $\\downarrow$ $\\downarrow$ $\\Downarrow$ $\\Downarrow$   $\\leftarrow$ $\\leftarrow$ $\\Leftarrow$ $\\Leftarrow$   $\\rightarrow$ $\\rightarrow$ $\\Rightarrow$ $\\Rightarrow$   $\\leftrightarrow$ $\\leftrightarrow$ $\\Leftrightarrow$ $\\Leftrightarrow$   $\\longleftarrow$ $\\longleftarrow$ $\\Longleftarrow$ $\\Longleftarrow$   $\\longrightarrow$ $\\longrightarrow$ $\\Longrightarrow$ $\\Longrightarrow$   $\\longleftrightarrow$ $\\longleftrightarrow$ $\\Longleftrightarrow$ $\\Longleftrightarrow$    平面几何    符号 代码     $\\triangle$ $\\triangle$   $\\odot$ $\\odot$   $\\angle$ $\\angle$   $\\perp$ $\\perp$   $30^\\circ$ $30^\\circ$   $\\sim$ $\\sim$   $\\cong$ $\\cong$    矩阵 基本矩阵\nMarkdown 代码：\n1 2 3 4 5 6  $\\left( \\begin{array}{lcr} a \u0026amp; b\\\\ c \u0026amp; d \\end{array} \\right)$\r  显示结果为：\n $\\left( \\begin{array}{lcr} a \u0026amp; b\\ c \u0026amp; d \\end{array} \\right)$\n 其他矩阵\nMarkdown 代码：\n1 2 3 4 5  $\\begin{pmatrix} a \u0026amp; b\\\\ c \u0026amp; d \\\\ \\end{pmatrix} \\quad\r\\begin{bmatrix} a \u0026amp; b\\\\ c \u0026amp; d \\\\ \\end{bmatrix}\\quad\r\\begin{Bmatrix} a \u0026amp; b\\\\ c \u0026amp; d\\\\ \\end{Bmatrix}\\quad\r\\begin{vmatrix} a \u0026amp; b\\\\ c \u0026amp; d \\\\ \\end{vmatrix}\\quad\r\\begin{Vmatrix} a \u0026amp; b\\\\ c \u0026amp; d \\\\ \\end{Vmatrix}$\r  显示结果为：\n$\\begin{pmatrix} a \u0026amp; b\\ c \u0026amp; d \\ \\end{pmatrix} \\quad\n\\begin{bmatrix} a \u0026amp; b\\ c \u0026amp; d \\ \\end{bmatrix}\\quad\n\\begin{Bmatrix} a \u0026amp; b\\ c \u0026amp; d\\ \\end{Bmatrix}\\quad\n\\begin{vmatrix} a \u0026amp; b\\ c \u0026amp; d \\ \\end{vmatrix}\\quad\n\\begin{Vmatrix} a \u0026amp; b\\ c \u0026amp; d \\ \\end{Vmatrix}$\n总结 如果想要熟练使用 Markdown 去书写数学表达式，还是需要花费大量的时间去练习。\n这篇文章我是花费了好几个小时才整理出来的，可能用处不大，但是日后有需要书写数学公式时，可以回头过来看看。有兴趣的话可以收藏下来，方便日后查阅。\n参考文章：在 Markdown 中输入数学公式(MathJax)\n","description":"最近受到疫情影响，学校不能开学，而且在家学习效率也不高，所以这几天就开始试着写博客，然后写博客就需要用到Markdown。之后我就整理了两篇文章，前一篇文章是入门的，另一篇就是这一篇，也可以叫做Markdown进阶篇。","id":1,"section":"posts","tags":["markdown"],"title":"如何用Markdown写好数学表达式","uri":"https://eternidad33.github.io/zh/posts/%E5%A6%82%E4%BD%95%E7%94%A8markdown%E5%86%99%E5%A5%BD%E6%95%B0%E5%AD%A6%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"content":"作为一个学习计算机相关知识的人，如果不经常写博客，就容易把刚学到的知识忘记，写博客是一个很好的学习习惯，而写好博客也就是要学会熟练使用 Markdown，这样可以很好地使我们的博客页面变得更加美观，这篇文章介绍的就是一些使用的 Markdown 使用技巧。\n推荐工具：Typora，VScode(插件Markdown-preview-enhanced)\n段落格式 字体设置 Markdown 代码\n1  \u0026lt;font size=10 face=\u0026#34;隶书\u0026#34; color=#ff0000\u0026gt;红色 10 号隶书\u0026lt;/font\u0026gt;   运行结果：\n红色 10 号隶书\n粗斜体   用*表示\nMarkdown 代码\n1 2 3  _斜体_ **粗体** **_粗斜体_**   显示结果为：\n斜体\n粗体\n粗斜体\n  用下划线表示\nMarkdown 代码\n1 2 3  _斜体_ **粗体** **_粗斜体_**   显示结果为：\n斜体\n粗体\n粗斜体\n  下划线 Markdown 代码：\n1  \u0026lt;u\u0026gt;带下划线文本\u0026lt;/u\u0026gt;   显示结果为：\n带下划线文本\n删除线 Markdown 代码：\n1  ~~删除线~~   显示结果为：\n删除线\n脚注格式 Markdown 代码：\n1 2  创建脚注格式是这样的 [^lorem]。 [^lorem]: Lorem ipsum dolor.   显示结果为：\n创建脚注格式是这样的 1。\n引用格式 嵌套结构 Markdown 代码：\n1 2 3 4 5  \u0026gt; 最外层 \u0026gt; \u0026gt; \u0026gt; 第一层嵌套 \u0026gt; \u0026gt; \u0026gt; \u0026gt; \u0026gt; 第二层嵌套   显示结果：\n 最外层\n 第一层嵌套\n 第二层嵌套\n   引用中使用列表 Markdown 代码：\n1 2 3 4 5 6 7 8 9  \u0026gt; 引用中使用列表 \u0026gt; \u0026gt; 1. 有序列表第一项 \u0026gt; 2. 有序列表第二项 \u0026gt; 3. 有序列表第三项 \u0026gt; \u0026gt; - 无序列表第一项 \u0026gt; - 无序列表第二项 \u0026gt; - 无序列表第三项   显示结果：\n 引用中使用列表\n 有序列表第一项 有序列表第二项 有序列表第三项   无序列表第一项 无序列表第二项 无序列表第三项   列表项中的引用 Markdown 代码：\n1 2 3 4 5  1. 第一项 \u0026gt; 第一行引用 \u0026gt; 第二行引用 2. 第二项 3. 第三项   显示结果：\n 第一项  第一行引用\n第二行引用\n  第二项 第三项  代码格式 行内代码 Markdown 代码：\n1  Python 代码`print(\u0026#39;helloworld\u0026#39;)`，控制台打印 helloworld   显示结果：\nPython 代码print('helloworld')，控制台打印 helloworld\n代码块  按 Tab 键或四个空格 用```包括起来，第一个后面加上代码语言，可以高亮显示  图片样式  直接放置图片\nMarkdown 代码： 1  ![戴帽子的犬夜叉.png](https://cdn.jsdelivr.net/gh/eternidad33/picbed@master/img/戴帽子的犬夜叉.png)   显示结果：\n 鼠标悬浮时，显示名称\nMarkdown 代码： 1  ![戴帽子的犬夜叉.png](https://cdn.jsdelivr.net/gh/eternidad33/picbed@master/img/戴帽子的犬夜叉.png \u0026#34;戴帽子的犬夜叉\u0026#34;)   显示结果：\n 使用 img 标签定义图片的宽高\nMarkdown 代码： 1  \u0026lt;img src=\u0026#39;https://cdn.jsdelivr.net/gh/eternidad33/picbed@master/img/戴帽子的犬夜叉.png\u0026#39; width=50% height=50%\u0026gt;   显示结果：\n  链接样式   直接写\nMarkdown 代码：\n1  [百度一下，你就知道](https://www.baidu.com)   显示结果：\n百度一下，你就知道\n  链接用 a 作为网址变量,然后为变量赋值\nMarkdown 代码：\n1 2  [百度一下，你就知道][a] [a]: https://www.baidu.com   显示结果：\n百度一下，你就知道\n  表格样式 Markdown 代码：\n1 2 3 4  | 左对齐 | 居中对齐 | 右对齐 | | :----- | :------: | -----: | | 1 | 2 | 3 | | 4 | 5 | 6 |   显示结果：\n| 左对齐 | 居中对齐 | 右对齐 |\n| :\u0026mdash;\u0026ndash; | :\u0026mdash;\u0026mdash;: | \u0026mdash;\u0026ndash;: |\n| 1 | 2 | 3 |\n| 4 | 5 | 6 |\n支持的 HTML 标签 Markdown 支持很多 HTML 标签,下面列举几个常用的标签\nMarkdown 代码：\n1 2 3 4 5 6 7 8 9  \u0026lt;kbd\u0026gt;Win\u0026lt;/kbd\u0026gt;+\u0026lt;kbd\u0026gt;Prtsc\u0026lt;/kbd\u0026gt; 快速截图 \u0026lt;em\u0026gt;强调\u0026lt;/em\u0026gt; \u0026lt;strong\u0026gt;加强强调\u0026lt;/strong\u0026gt; \u0026lt;b\u0026gt;加粗\u0026lt;/b\u0026gt; \u0026lt;i\u0026gt;倾斜\u0026lt;/i\u0026gt; 上标如，3\u0026lt;sup\u0026gt;2\u0026lt;/sup\u0026gt; 下标，如 CO\u0026lt;sub\u0026gt;2\u0026lt;/sub\u0026gt; 换行符\u0026lt;br\u0026gt; 分割线\u0026lt;hr\u0026gt;   显示结果：\nWin+Prtsc 快速截图\n强调\n加强强调\n加粗\n倾斜\n上标如，32\n下标，如 CO2\n换行符\n分割线\n转义字符 以下这些符号前面加上反斜杠\\来帮助插入普通的符号：\n\\ 反斜线 ` 反引号 * 星号 _ 下划线 {} 花括号 [] 方括号 () 小括号 # 井字号 + 加号 - 减号 . 英文句点 ! 感叹号  特殊符号    符号 代码     © \u0026amp;copy;   ™ \u0026amp;trade;   \u0026amp; \u0026amp;amp;   \u0026lt; \u0026amp;lt;   \u0026gt; \u0026amp;gt;   £ \u0026amp;pound;   ¥ \u0026amp;yen;   € \u0026amp;euro;   ® \u0026amp;reg;   ± \u0026amp;plusmn;   § \u0026amp;sect;   X² X\u0026amp;sup2;   Y³ Y\u0026amp;sup3;   ¾ \u0026amp;frac34;   « \u0026amp;laquo;   » \u0026amp;raquo;   37ºC 37\u0026amp;ordm;C     Lorem ipsum dolor. \u0026#x21a9;\u0026#xfe0e;\n   ","description":"写博客是一个很好的学习习惯，而写好博客也就是要学会熟练使用Markdown","id":2,"section":"posts","tags":["markdown"],"title":"小白必看，用Markdown代码写出好看的页面","uri":"https://eternidad33.github.io/zh/posts/%E5%B0%8F%E7%99%BD%E5%BF%85%E7%9C%8B%E7%94%A8markdown%E4%BB%A3%E7%A0%81%E5%86%99%E5%87%BA%E5%A5%BD%E7%9C%8B%E7%9A%84%E9%A1%B5%E9%9D%A2/"},{"content":"开发工具 IDEA 从入门到爱不释手-课程笔记 1-1 代码生成 Generate  Alt+Insert,或者右键-Generate：生成 getter 或 setter  1-2 高效的代码编辑技能    快捷键 功能     Ctrl+Alt+L 格式化   Ctrl+D 复制光标所在行   Alt+Shift+上/下 移动所在行或所选行    1-3 Demo 项目介绍 分层结构\n Config：所有的配置 Controller：请求入口 Service：逻辑层 Mapper：持久层 Domain(Po)：表映射实体 Dto：数据传输对象  1-4 git 更多操作 顶部添加 git 提交选项\n1-5 快速查找和替换    快捷键 功能     Ctrl+F 查找   Ctrl+R 替换   Ctrl+Shift+F 全局查找   Ctrl+Shift+R 全局替换   Ctrl+Shift+N 查找文件   Ctrl+Shift+A 查找所有的菜单或操作   双击 shift 万能查找    2-1 代码模板  psvm：生成主函数 sout：System.out.println(); fori：for 循环 fore：foreach 循环 Live Templates postfix：先打变量或表达式，再打快捷键  2-2 代码重构 Refactor    快捷键 功能     Shift+F6 代码重命名   Ctrl+Alt+V 自动生成返回值   Alt+Delete 安全删除   F5 文件复制粘贴     一个方法只负责实现一个功能  2-3 快速跳转    快捷键 功能     Ctrl+左/右 跳过一个单词   Ctrl+G 快速跳转到指定行   Alt+左/右 左右切换 Tabs   Ctrl+E 查看最近浏览过的文件    3-1 更多实用技巧  Ctrl+Alt+Shift+J ：选中文件中所有和被选中的代码一样的代码  ","description":"推荐几个比较好用的插件 1. 图片背景`Background Image Plus` 2. 彩虹括号`Rainbow Brackets` 3. 主题`Material Theme ul` 4. 记录编码时长`wakatime` 5. 统计项目代码行数`Statistic` 6. 快捷键提示`Key Promoter X` 7. 翻译插件`Translation` 8. 数据库表生成Java文件`EasyCode` 9. 中文插件`Chinese（Simplified）Language Pack EAP`","id":3,"section":"posts","tags":["idea"],"title":"idea使用技巧总结","uri":"https://eternidad33.github.io/zh/posts/idea%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/"},{"content":"m10c 主题配置 主题地址：GitHub 仓库地址\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  title = \u0026#34;Vigilr的博客\u0026#34;\r[params]\rdescription = \u0026#34;宁为玉碎，不为瓦全\u0026#34;\ravatar = \u0026#34;avatar.jpg\u0026#34;\r[[params.social]]\rname = \u0026#34;github\u0026#34;\rurl = \u0026#34;https://github.com/eternidad33\u0026#34;\r[[params.social]]\rname = \u0026#34;mail\u0026#34;\rurl = \u0026#34;mailto:3496655347@qq.com\u0026#34;\r[[params.social]]\rname = \u0026#34;link\u0026#34;\rurl = \u0026#34;https://blog.csdn.net/qq_42907802\u0026#34;\r  主题仓库要下载到站点目录/themes下\n文章目录为：站点目录/content/posts\n头像的路径：站点目录/static/avatar.jpg\n只是简单地设计了几个链接，链接的图标在主题目录/data/m10c/icons.json文件中定义\n博客启动：hugo server -t hugo-theme-m10c -D\n浏览器访问:http://localhost:1313/\n至此博客启动成功\n","description":"m10c是一款比较简洁的主题，而且容易配置","id":4,"section":"posts","tags":["hugo","theme"],"title":"m10c主题配置","uri":"https://eternidad33.github.io/zh/posts/m10c%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"},{"content":"Hugo 博客搭建 本地部署 推荐视频：手把手教你从 0 开始搭建自己的个人博客 |第二种姿势 | hugo\n  下载 Hugo，下载地址：GitHub\n  配置环境变量\n  创建自己的站点文件夹hugo new site myHugoSite\n生成的目录如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  PS C:\\Users\\Administrator\\Desktop\\myHogoSite\u0026gt; tree /f\r文件夹 PATH 列表\r卷序列号为 2A8A-01A5\rC:.\r│ config.toml\r│\r├─archetypes\r│ default.md\r │\r├─content\r├─data\r├─layouts\r├─static\r└─themes\r    新建文章\n在 content 目录下生成博客hugo new 我的第一篇博客.md\n在 content/posts 目录下生成博客hugo new posts/我的第二篇博客.md\n  下载m10c 主题并配置\n  部署到 GitHub  创建远程仓库,仓库名必须为用户名.github.io 生成 public 文件夹hugo -t 主题名 -b https://用户名.github.io -D 然后就是一系列 git 操作 进入 public，初始化 git 仓库 添加到暂存区 提交仓库 连接远程仓库 推送到远程仓库  不清楚的命令可以通过hugo help查看\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  $ hugo help\rhugo is the main command, used to build your Hugo site.\rHugo is a Fast and Flexible Static Site Generator\rbuilt with love by spf13 and friends in Go.\rComplete documentation is available at http://gohugo.io/.\rUsage:\rhugo [flags]\rhugo [command]\rAvailable Commands:\rconfig Print the site configuration\rconvert Convert your content to different formats\rdeploy Deploy your site to a Cloud provider.\renv Print Hugo version and environment info\rgen A collection of several useful generators.\rhelp Help about any command\rimport Import your site from others.\rlist Listing out various types of content\rmod Various Hugo Modules helpers.\rnew Create new content for your site\rserver A high performance webserver\rversion Print the version number of Hugo\rFlags:\r-b, --baseURL string hostname (and path) to the root, e.g. http://spf13.com/\r--templateMetrics display metrics about template executions\r--templateMetricsHints calculate some improvement hints when combined with --templateMetrics\r-t, --theme strings themes to use (located in /themes/THEMENAME/)\r--themesDir string filesystem path to themes directory\r--trace file write trace to file (not useful in general)\r-v, --verbose verbose output\r--verboseLog verbose logging\r-w, --watch watch filesystem for changes and recreate as needed\rAdditional help topics:\rhugo check Contains some verification checks\rUse \u0026#34;hugo [command] --help\u0026#34; for more information about a command.\r  ","description":"本文介绍如何搭建Hugo个人博客","id":5,"section":"posts","tags":["hugo"],"title":"Hugo博客搭建","uri":"https://eternidad33.github.io/zh/posts/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"},{"content":"码云上搭建 Hexo 静态博客   下载 Node.js\n  下载并配置 Git\n  安装 Hexo\n 设置 cnpm，设置为国内的淘宝镜像npm install -g cnpm --registry=https://registry.npm.taobao.org 安装 Hexo， cnpm install -g hexo-cli 查看是否安装成功 hexo -v    建立博客文件夹\n  执行hexo init\n  Hexo 常用的几个命令\n hexo s运行 Hexo hexo n 文件名.md创建博客文章，也可以直接在\\source\\_posts文件夹中创建 hexo g生成博客文件 hexo clean清理缓存 hexo d推送到远端服务器    创建远程仓库，仓库名要与自己的用户名相同\n  安装 Git 依赖，cnpm install --save hexo-deployer-git\n  修改配置文件\n1 2 3 4  deploy:type:gitrepo:https://gitee.com/eternidad33/eternidad33.gitbranch:master    开启Gitee Pages服务\n  推荐 B 站 Up 主：CodeSheep\n参考的是他的视频手把手教你从 0 开始搭建自己的个人博客 |无坑版视频教程| hexo\n","description":"","id":6,"section":"posts","tags":["hexo"],"title":"码云上搭建Hexo博客","uri":"https://eternidad33.github.io/zh/posts/%E7%A0%81%E4%BA%91%E4%B8%8A%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"},{"content":"学习类 中国大学 MOOC（涵盖各个行业的课程）\n慕课网（计算机互联网行业学习的网站）\n哔哩哔哩（各个领域的 UP 主）\nw3cSchool（学习编程）\n廖雪峰的官方网站（学习编程）\n菜鸟教程（学习编程）\n实验楼（学习编程）\n数据酷客（学习 Python，大数据）\n阿里云大学(提供编程各个方向的学习路线)\nhow2j（学习 Java）\n素材类 微信读书（只要有无限卡，全场免费读）\n鸠摩搜书（基本上想搜的书都能搜到）\nGreasy Fork（配合油猴插件下载脚本）\nMSDN，我告诉你（免费下载纯净的 Windows 系统镜像）\n我的 MSDN（免费下载纯净的 Windows 系统镜像）\n电脑壁纸（免费好看的桌面壁纸）\n阿里巴巴矢量图标库（下载各种格式的图标）\n第一 PPT（免费 PPT 模板）\n优品 PPT（免费 PPT 模板）\n站长素材（下载图标，字体，PSD，矢量图，jQuery 等）\n编程相关 ProcessOn（在线作图）\nGitHub（ 世界上最大的软件项目的托管平台 ）\n码云（相当于国内的 GitHub）\n牛客（刷题）\nLeetCode（刷题）\n洛谷（刷题）\nwakatime（记录编码时间）\nSM.MS（图床工具）\nShields.IO（生成展示在 Markdown 文档中的徽章）\nSimple Icons（下载 SVG 图标）\n","description":"大学期间收集的网站，主要分为学习类，素材类，和编程相关","id":7,"section":"posts","tags":null,"title":"网站推荐","uri":"https://eternidad33.github.io/zh/posts/%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/"},{"content":"个人主页汇总  码云 Github Bitbucket 简书 CSDN 博客园 牛客 LeetCode 洛谷 今日头条 知乎 百度贴吧 微博 实验楼 中国大学MOOC 慕课网 哔哩哔哩 网易云音乐 斗鱼 steam  欢迎大家关注我的动态\n","description":"个人动态","id":8,"section":"","tags":null,"title":"关于","uri":"https://eternidad33.github.io/zh/about/"}]